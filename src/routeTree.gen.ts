/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as AuthenticatedIndexImport } from './routes/_authenticated/index'
import { Route as AuthenticatedProfileImport } from './routes/_authenticated/profile'
import { Route as AuthenticatedGamesAddImport } from './routes/_authenticated/games/add'
import { Route as AuthenticatedGamesIdImport } from './routes/_authenticated/games.$id'
import { Route as AuthenticatedGamesAddUploadImport } from './routes/_authenticated/games/add/upload'
import { Route as AuthenticatedGamesAddDetailsImport } from './routes/_authenticated/games/add/details'

// Create/Update Routes

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedIndexRoute = AuthenticatedIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedProfileRoute = AuthenticatedProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedGamesAddRoute = AuthenticatedGamesAddImport.update({
  id: '/games/add',
  path: '/games/add',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedGamesIdRoute = AuthenticatedGamesIdImport.update({
  id: '/games/$id',
  path: '/games/$id',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedGamesAddUploadRoute =
  AuthenticatedGamesAddUploadImport.update({
    id: '/upload',
    path: '/upload',
    getParentRoute: () => AuthenticatedGamesAddRoute,
  } as any)

const AuthenticatedGamesAddDetailsRoute =
  AuthenticatedGamesAddDetailsImport.update({
    id: '/details',
    path: '/details',
    getParentRoute: () => AuthenticatedGamesAddRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/profile': {
      id: '/_authenticated/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof AuthenticatedProfileImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/games/$id': {
      id: '/_authenticated/games/$id'
      path: '/games/$id'
      fullPath: '/games/$id'
      preLoaderRoute: typeof AuthenticatedGamesIdImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/games/add': {
      id: '/_authenticated/games/add'
      path: '/games/add'
      fullPath: '/games/add'
      preLoaderRoute: typeof AuthenticatedGamesAddImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/games/add/details': {
      id: '/_authenticated/games/add/details'
      path: '/details'
      fullPath: '/games/add/details'
      preLoaderRoute: typeof AuthenticatedGamesAddDetailsImport
      parentRoute: typeof AuthenticatedGamesAddImport
    }
    '/_authenticated/games/add/upload': {
      id: '/_authenticated/games/add/upload'
      path: '/upload'
      fullPath: '/games/add/upload'
      preLoaderRoute: typeof AuthenticatedGamesAddUploadImport
      parentRoute: typeof AuthenticatedGamesAddImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedGamesAddRouteChildren {
  AuthenticatedGamesAddDetailsRoute: typeof AuthenticatedGamesAddDetailsRoute
  AuthenticatedGamesAddUploadRoute: typeof AuthenticatedGamesAddUploadRoute
}

const AuthenticatedGamesAddRouteChildren: AuthenticatedGamesAddRouteChildren = {
  AuthenticatedGamesAddDetailsRoute: AuthenticatedGamesAddDetailsRoute,
  AuthenticatedGamesAddUploadRoute: AuthenticatedGamesAddUploadRoute,
}

const AuthenticatedGamesAddRouteWithChildren =
  AuthenticatedGamesAddRoute._addFileChildren(
    AuthenticatedGamesAddRouteChildren,
  )

interface AuthenticatedRouteChildren {
  AuthenticatedProfileRoute: typeof AuthenticatedProfileRoute
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute
  AuthenticatedGamesIdRoute: typeof AuthenticatedGamesIdRoute
  AuthenticatedGamesAddRoute: typeof AuthenticatedGamesAddRouteWithChildren
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedProfileRoute: AuthenticatedProfileRoute,
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
  AuthenticatedGamesIdRoute: AuthenticatedGamesIdRoute,
  AuthenticatedGamesAddRoute: AuthenticatedGamesAddRouteWithChildren,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof AuthenticatedRouteWithChildren
  '/login': typeof LoginRoute
  '/profile': typeof AuthenticatedProfileRoute
  '/': typeof AuthenticatedIndexRoute
  '/games/$id': typeof AuthenticatedGamesIdRoute
  '/games/add': typeof AuthenticatedGamesAddRouteWithChildren
  '/games/add/details': typeof AuthenticatedGamesAddDetailsRoute
  '/games/add/upload': typeof AuthenticatedGamesAddUploadRoute
}

export interface FileRoutesByTo {
  '/login': typeof LoginRoute
  '/profile': typeof AuthenticatedProfileRoute
  '/': typeof AuthenticatedIndexRoute
  '/games/$id': typeof AuthenticatedGamesIdRoute
  '/games/add': typeof AuthenticatedGamesAddRouteWithChildren
  '/games/add/details': typeof AuthenticatedGamesAddDetailsRoute
  '/games/add/upload': typeof AuthenticatedGamesAddUploadRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/login': typeof LoginRoute
  '/_authenticated/profile': typeof AuthenticatedProfileRoute
  '/_authenticated/': typeof AuthenticatedIndexRoute
  '/_authenticated/games/$id': typeof AuthenticatedGamesIdRoute
  '/_authenticated/games/add': typeof AuthenticatedGamesAddRouteWithChildren
  '/_authenticated/games/add/details': typeof AuthenticatedGamesAddDetailsRoute
  '/_authenticated/games/add/upload': typeof AuthenticatedGamesAddUploadRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/login'
    | '/profile'
    | '/'
    | '/games/$id'
    | '/games/add'
    | '/games/add/details'
    | '/games/add/upload'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/login'
    | '/profile'
    | '/'
    | '/games/$id'
    | '/games/add'
    | '/games/add/details'
    | '/games/add/upload'
  id:
    | '__root__'
    | '/_authenticated'
    | '/login'
    | '/_authenticated/profile'
    | '/_authenticated/'
    | '/_authenticated/games/$id'
    | '/_authenticated/games/add'
    | '/_authenticated/games/add/details'
    | '/_authenticated/games/add/upload'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  LoginRoute: typeof LoginRoute
}

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  LoginRoute: LoginRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_authenticated",
        "/login"
      ]
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx",
      "children": [
        "/_authenticated/profile",
        "/_authenticated/",
        "/_authenticated/games/$id",
        "/_authenticated/games/add"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/_authenticated/profile": {
      "filePath": "_authenticated/profile.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/": {
      "filePath": "_authenticated/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/games/$id": {
      "filePath": "_authenticated/games.$id.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/games/add": {
      "filePath": "_authenticated/games/add.tsx",
      "parent": "/_authenticated",
      "children": [
        "/_authenticated/games/add/details",
        "/_authenticated/games/add/upload"
      ]
    },
    "/_authenticated/games/add/details": {
      "filePath": "_authenticated/games/add/details.tsx",
      "parent": "/_authenticated/games/add"
    },
    "/_authenticated/games/add/upload": {
      "filePath": "_authenticated/games/add/upload.tsx",
      "parent": "/_authenticated/games/add"
    }
  }
}
ROUTE_MANIFEST_END */
